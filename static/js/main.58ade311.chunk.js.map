{"version":3,"sources":["MovieProject/img/Star1.svg","MovieProject/img/play.svg","MovieProject/img/popularity.svg","MovieProject/img/Star0.svg","MovieProject/img/Logo.svg","MovieProject/Print/YouTubeComp.js","MovieProject/Print/ModalTrilerComp.js","MovieProject/Print/Print.js","MovieProject/Print/PrintMovie.js","MovieProject/Print/Movies.js","MovieProject/Header/Header.js","MovieProject/Search/SearchMovie.js","MovieProject/NavBar/NavBar.js","MovieProject/Footer/Footer.js","MovieProject/PopularMovies/SwiperComp/SwiperComp.js","MovieProject/PopularMovies/PopularMovies.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","YouTubeComp","event","target","pauseVideo","videoId","this","props","opts","height","width","playerVars","autoplay","onReady","_onReady","React","Component","ModalTrlerComp","buttonLabel","className","useState","modal","setModal","toggle","trailerUrl","setTrailerUrl","Button","style","backgroundColor","onClick","movie","movieTrailer","title","name","then","url","urlParams","URLSearchParams","URL","search","get","catch","error","console","log","src","require","alt","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","color","Print","idx","key","vote_average","poster_path","split","slice","join","overview","length","concat","original_language","release_date","first_air_date","popularity","toFixed","PrintMovie","movies","setMovies","useEffect","a","fetch","response","json","data","results","fetchData","map","Movies","API_URl","API_KEY","request","req","Header","backdrop_path","substr","SearchMovies","input","setInput","searchMovies","e","preventDefault","res","onSubmit","value","onChange","type","placeholder","disabled","NavBar","show","setShow","window","addEventListener","scrollY","removeEventListener","Footer","SwiperComp","swiper","useRef","arrImg","voteAverage","x","push","current","Swiper","effect","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","el","navigation","nextEl","prevEl","PopularMovies","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.58ade311.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Star1.b0edd02e.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.e9268479.svg\";","module.exports = __webpack_public_path__ + \"static/media/popularity.07510ebe.svg\";","module.exports = __webpack_public_path__ + \"static/media/Star0.08600224.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logo.ba104922.svg\";","import React from 'react';\r\nimport YouTube from 'react-youtube';\r\n\r\nclass YouTubeComp extends React.Component {\r\n    _onReady(event) {\r\n        // access to player in all event handlers via event.target\r\n        event.target.pauseVideo();\r\n    }\r\n    render() {\r\n        const opts = {\r\n            height: '390',\r\n            width: '100%',\r\n            playerVars: {\r\n                // https://developers.google.com/youtube/player_parameters\r\n                autoplay: 1,\r\n            },\r\n        };\r\n\r\n        return <YouTube videoId={this.props.videoId} opts={opts} onReady={this._onReady} />;\r\n    }\r\n\r\n\r\n}\r\nexport default YouTubeComp","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport YouTubeComp from \"./YouTubeComp\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst ModalTrlerComp = (props) => {\r\n    const {\r\n        buttonLabel,\r\n        className\r\n    } = props;\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const [trailerUrl,setTrailerUrl] = useState(\"\");\r\n\r\n    const handleClick = (movie)=> {\r\n        setModal(!modal);\r\n\r\n        if (trailerUrl) {\r\n            setTrailerUrl(\"\");\r\n        } else {\r\n            movieTrailer(movie.title ? movie.title : movie.name)\r\n                .then(url => {\r\n                    // console.log(url);\r\n                    const urlParams = new URLSearchParams(new URL(url).search);\r\n                    setTrailerUrl(urlParams.get(\"v\"));\r\n                    // console.log(urlParams.get(\"v\"))\r\n                })\r\n                .catch((error)=>console.log(error))\r\n        }\r\n    };\r\n// console.log(props.movie);\r\n    return (\r\n        <div>\r\n            <Button style={{backgroundColor: \"#550037\"}} onClick={()=>handleClick(props.movie)}><img src={require(\"../img/play.svg\")} alt=\"\"/> Movie trailer</Button>\r\n            <Modal isOpen={modal} toggle={toggle} className={className}>\r\n                <ModalHeader toggle={toggle}>{props.movie.title ? props.movie.title : props.movie.name}</ModalHeader>\r\n                <ModalBody>\r\n\r\n                    <YouTubeComp videoId = {trailerUrl}/>\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalTrlerComp;","import React, {useState} from \"react\";\r\nimport \"./PrintMovie.css\";\r\n\r\nimport ModalTrlerComp from \"./ModalTrilerComp\";\r\n\r\nexport function Print({movie, url, idx}) {\r\n    const IMG_URL = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n    return(\r\n        <div  key={idx} className=\"flip-card\">\r\n            <div className=\"flip-card-inner\">\r\n                <div className=\"flip-card-front\">\r\n                    <div className={\"VoteAverage\"}>\r\n                        <p>{movie.vote_average} </p>\r\n                    </div>\r\n                    <img  className={\"cartImg\"} src={IMG_URL + movie.poster_path} alt=\"\"/>\r\n                </div>\r\n                <div className=\"flip-card-back\">\r\n                    <h4>{(movie.title ? movie.title : movie.name).split(\" \").slice(0,4).join(\" \")}</h4>\r\n                    <small>{movie.overview.length > 140 ?\r\n                        movie.overview.slice(0,140).concat(\"...\"): movie.overview}\r\n                        {/*movie.overview.split(\" \").slice(0,20).join(\" \").concat(\"...\")*/}\r\n                    </small>\r\n                    <div className=\"flip-card-back-data\">\r\n                        <div className=\"flip-card-back-left\">\r\n                            <p>{movie.original_language === \"en\" ? \"English\" : \"Korean\"}</p>\r\n                            <b>{movie.release_date ? movie.release_date : movie.first_air_date}</b>\r\n                        </div>\r\n                        <div  className=\"flip-card-back-right\">\r\n                            <img src={require(\"../img/popularity.svg\")} alt=\"\"/>\r\n                            <small>{movie.popularity.toFixed(2)}</small>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <ModalTrlerComp  movie = {movie}/>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState,useEffect} from \"react\";\r\nimport \"./PrintMovie.css\";\r\nimport {Print} from \"./Print\";\r\n\r\nexport function PrintMovie({title, url}) {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchData  = async() => {\r\n            let response = await fetch(url);\r\n            let data = await response.json();\r\n            setMovies(data.results);\r\n            // return data;\r\n        };\r\n        fetchData();\r\n    },[]);\r\n    // console.log(movies);\r\n\r\n    return(\r\n        <div className={\"section\"}>\r\n            <h3>{title}</h3>\r\n            <div className={\"rowSection\"}>\r\n                {\r\n                    movies.map((movie,idx)=>\r\n                        <Print movie = {movie} url = {url} idx = {idx} key = {idx}/>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React  from \"react\";\r\nimport \"./Movies.css\";\r\nimport {PrintMovie} from \"./PrintMovie\";\r\n\r\nexport function Movies(props) {\r\n    const API_URl = 'https://api.themoviedb.org/3';\r\n    const  API_KEY = '31769453dd0f9634806aedb81440ed94';\r\n\r\n    const  request = [\r\n        {title: \"Trending\", url:`${API_URl}/trending/all/week?api_key=${API_KEY}&language=en-US`},\r\n        {title: \"Top Rated\", url:`${API_URl}/movie/top_rated?api_key=${API_KEY}&language=en-US`},\r\n        {title: \"Action Movies\", url:`${API_URl}/discover/movie/?api_key=${API_KEY}&with_genres=28&append_to_response=videos`},\r\n        {title: \"Comedy Movies\", url:`${API_URl}/discover/movie/?api_key=${API_KEY}&with_genres=35&append_to_response=videos`},\r\n        {title: \"Romance Movies\", url:`${API_URl}/discover/movie/?api_key=${API_KEY}&with_genres=10749&append_to_response=videos`},\r\n        {title: \"Horror Movies\", url:`${API_URl}/discover/movie/?api_key=${API_KEY}&with_genres=27&append_to_response=videos`},\r\n        {title: \"Mystery\", url:`${API_URl}/discover/movie/?api_key=${API_KEY}&with_genres=9648&append_to_response=videos`},\r\n        {title: \"Scifi\", url:`${API_URl}/discover/movie/?api_key=${API_KEY}&with_genres=878&append_to_response=videos`},\r\n        {title: \"Western\", url:`${API_URl}/discover/movie/?api_key=${API_KEY}&with_genres=37&append_to_response=videos`},\r\n        {title: \"Animation\", url:`${API_URl}/discover/movie/?api_key=${API_KEY}&with_genres=16&append_to_response=videos`},\r\n    ];\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                request.map((req,idx)=>\r\n                    <PrintMovie key={idx} title={req.title} url={req.url}/>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport \"./Header.css\";\r\n\r\nexport function Header(props) {\r\n    const url = \"https://api.themoviedb.org/3/movie/top_rated?api_key=31769453dd0f9634806aedb81440ed94&language=en-US\";\r\n    const [movies, setMovies] = useState([]);\r\n    const IMG_URL = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n    useEffect(()=>{\r\n        const fetchData  = async() => {\r\n            let response = await fetch(url);\r\n            let data = await response.json();\r\n            setMovies(data.results[0]);\r\n            // setMovies(data.results[Math.floor(data.results.length*Math.random())]);\r\n            // console.log(Math.floor(data.results.length*Math.random()))\r\n        };\r\n        fetchData();\r\n    },[]);\r\n\r\n    return(\r\n        <div className={\"Header\"}>\r\n            {movies.backdrop_path && <img className={\"headerbgimg\"} src={IMG_URL + movies.backdrop_path} alt=\"\"/>}\r\n\r\n            <div className={\"HeaderTextLeft\"}>\r\n                <h1 className={\"headerTitle\"}>{movies.title?.length > 30 ?  movies.title.substr(0,30) +\"...\" : movies.title}</h1>\r\n                <p className={\"headerParagraph\"}>{movies.overview?.length > 170 ?  movies.overview.substr(0,170) +\"...\" : movies.overview}</p>\r\n            </div>\r\n            <div className={\"HeaderTextRight\"}>\r\n                <p className={\"headerLanguage\"}>{movies.original_language ===\"en\" ? \"English\" : \"Russian\"}</p>\r\n                <h4 className={\"headerDate\"}>{movies.release_date}</h4>\r\n                <div className={\"HeaderVote\"}>\r\n                    <img src={require(\"../img/Star1.svg\")} alt=\"\"/>\r\n                    <img src={require(\"../img/Star1.svg\")} alt=\"\"/>\r\n                    <img src={require(\"../img/Star1.svg\")} alt=\"\"/>\r\n                    <img src={require(\"../img/Star1.svg\")} alt=\"\"/>\r\n                    <img src={require(\"../img/Star0.svg\")} alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport \"./SearchMovie.css\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nexport default function SearchMovies(props){\r\n    //input\r\n    const [input,setInput] = useState(\"\");\r\n    const [movies, setMovies] = useState([]);\r\n    const IMG_URL = \"https://image.tmdb.org/t/p/original/\";\r\n    const [modal, setModal] = useState(false);\r\n    const  searchMovies = async(e) => {\r\n        e.preventDefault();\r\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=31769453dd0f9634806aedb81440ed94&language=en-US&query=${input}&page=1&include_adult=false`;\r\n\r\n        try {\r\n            const res = await fetch(url);\r\n            const data = await res.json();\r\n            setMovies(data.results);\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n        setInput(\"\")\r\n    };\r\n\r\n    //modal\r\n    const {\r\n        buttonLabel,\r\n        className\r\n    } = props;\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    return (\r\n        <div className={\"container1\"}>\r\n            <form className=\"form\" onSubmit={searchMovies}>\r\n                <input className=\"input\"\r\n                       name=\"query\"\r\n                       value={input}\r\n                       onChange={(e)=>setInput(e.target.value)}\r\n                       type=\"text\"\r\n                       placeholder=\"Movies name\"\r\n                />\r\n                <button disabled={!input} className=\"buttonSearch\" onClick={toggle} type=\"submit\">Search</button>\r\n            </form>\r\n\r\n            <Modal isOpen={modal} toggle={toggle} className={className}>\r\n                <ModalHeader toggle={toggle}>Search movies!</ModalHeader>\r\n                <ModalBody className=\"card-list\">\r\n                    {movies.map((movie,idx) =>\r\n                        movie.poster_path && <img key={idx} className={\"cartImgSearch\"} src={IMG_URL + movie.poster_path} alt=\"\"/>\r\n                    )}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n//{movies.map(movie => (\r\n//                     <div className={\"card\"}>\r\n//                         <img className={\"cardImg\"} src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`} alt=\"\"/>\r\n//                         <h2>{movie.original_title}</h2>\r\n//                         <small>{movie.overview}</small>\r\n//                         <p>Release date: {movie.release_date}</p>\r\n//                         <p>Vote: {movie.vote_average}</p>\r\n//                     </div>\r\n//                 ))}","import React, { useState, useEffect } from \"react\";\r\nimport \"./NavBar.css\";\r\nimport SearchMovies from \"../Search/SearchMovie\";\r\n\r\nexport function NavBar(props) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () =>{\r\n            window.scrollY > 100 ? setShow(true) : setShow(false)\r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"scroll\")\r\n        }\r\n    },[]);\r\n\r\n    return(\r\n        <div className={`NavBar ${show && \"NavBarBG\"}`}>\r\n            <div>\r\n                <img className={\"Logo\"} src={require(\"../img/Logo.svg\")} alt=\"\"/>\r\n            </div>\r\n            <SearchMovies/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nexport function Footer(props) {\r\n    return(\r\n        <div className={\"Footer\"}>\r\n            <p>Copyright 2020</p>\r\n        </div>\r\n    )\r\n}","import React,{ useEffect, useRef } from 'react';\r\nimport 'swiper/css/swiper.min.css';\r\nimport \"./SwiperComp.css\";\r\nimport Swiper from 'swiper';\r\n\r\nconst SwiperComp = ({movies})=>{\r\n    const swiper = useRef(null);\r\n    const IMG_URL = \"https://image.tmdb.org/t/p/original/\";\r\n    const categoryData = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19];\r\n    let arrImg=[];\r\n    let voteAverage=[];\r\n\r\n    movies.results && movies.results.map(x=> {\r\n        arrImg.push(x.poster_path);\r\n        voteAverage.push(x.vote_average);\r\n    });\r\n    // console.log(movies);\r\n    // console.log(voteAverage);\r\n\r\n    useEffect(()=>{\r\n        swiper.current = new Swiper('.swiper-container',{\r\n            effect: 'coverflow',\r\n            grabCursor: true,\r\n            centeredSlides: true,\r\n            slidesPerView: 'auto',\r\n            coverflowEffect: {\r\n                rotate: 50,\r\n                stretch: 0,\r\n                depth: 100,\r\n                modifier: 1,\r\n                slideShadows : true,\r\n            },\r\n            pagination: {\r\n                el: '.swiper-pagination',\r\n            },\r\n            navigation: {\r\n                nextEl: '.swiper-button-next',\r\n                prevEl: '.swiper-button-prev',\r\n            }\r\n        })\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"AppSwiper\">\r\n            <div className=\"swiperMainContainer\">\r\n                <div className=\"swiper-container\">\r\n                    <div className=\"swiper-wrapper\">\r\n                        {categoryData.map(x=>\r\n                            <div className=\"swiper-slide\" key={x}>\r\n                                <div className=\"imgCardHolder\">\r\n                                    <div>\r\n                                        <p>{voteAverage[x]} </p>\r\n                                    </div>\r\n                                    {arrImg[x] && <img className={\"swiperImg\"} src={IMG_URL+arrImg[x]} alt=\"images\"/>}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    {/*<div className=\"swiper-pagination\"> </div>*/}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SwiperComp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./PopularMovies.css\";\r\nimport SwiperComp from \"./SwiperComp/SwiperComp\";\r\n\r\nexport function PopularMovies(props) {\r\n    const url = \"https://api.themoviedb.org/3/movie/top_rated?api_key=31769453dd0f9634806aedb81440ed94&language=en-US\";\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchData  = async() => {\r\n            let response = await fetch(url);\r\n            let data = await response.json();\r\n            setMovies(data);\r\n        };\r\n        fetchData();\r\n    },[]);\r\n\r\n    return(\r\n        <div className={\"popular\"}>\r\n            <h2>Popular movies</h2>\r\n            <SwiperComp movies={movies}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Movies} from \"./MovieProject/Print/Movies\";\nimport {Header} from \"./MovieProject/Header/Header\";\nimport {NavBar} from \"./MovieProject/NavBar/NavBar\";\nimport {Footer} from \"./MovieProject/Footer/Footer\";\nimport {PopularMovies} from \"./MovieProject/PopularMovies/PopularMovies\";\n\nfunction App() {\n  return (\n    <div className={\"App\"}>\n        <NavBar/>\n        <Header/>\n        <PopularMovies/>\n        <h2>Choose genres</h2>\n        <Movies/>\n        <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}